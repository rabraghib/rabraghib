name: ðŸš€ Build, Release & Deploy
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
      - run: |
          yarn --frozen-lockfile
          yarn nx-all build
      - uses: actions/upload-artifact@v2
        with:
          name: projects-dist
          path: |
            dist/projects
  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
      - run: |
          yarn --frozen-lockfile
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: ðŸ“ƒ Changelogs and versions & git tag
        run: |
          yarn release
          yarn extract-changelog-release > dist/RELEASE_BODY.md
      - id: post-release
        run: |
          git push
          echo "::set-output name=version::$(node ./tools/get-new-version.js --current)"
      - uses: actions/download-artifact@v2
        with:
          name: projects-dist
      - name: ðŸ“¦ Zip each project dist folder
        run: |
          cd dist/projects
          for package in */; do
            zip -r ../zips/rabraghib-$(basename $package)-${{ steps.post-release.outputs.version }}.zip $package;
          done
      - name: Create Github release
        uses: softprops/action-gh-release@v1
        with:
          name: 'v${{ steps.post-release.outputs.version }} ðŸŽ‰'
          tag_name: v${{ steps.post-release.outputs.version }}
          files: dist/zips/*.zip
          body_path: dist/RELEASE_BODY.md
  deploy:
    needs: release
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn --frozen-lockfile && yarn nx-all build
      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://npm.pkg.github.com'
      - name: ðŸŽ‰ Publish Packages to Github Packages
        run: yarn nx-all deploy-package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://registry.npmjs.org'
      - name: ðŸŽ‰ Publish Packages to npm
        run: |
          yarn nx-all deploy-package
          yarn json -I -f dist/projects/cli-card/package.json -e "this.name='rabraghib'"
          cd dist/projects/cli-card
          yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: ðŸš€ Deploy all projects
        run: yarn nx-all deploy
